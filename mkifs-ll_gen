#!/bin/bash
# $Id: mkinitramfs-ll/mkifs-ll_bb[.bash],v 0.2.2 2011/10/24 -tclover Exp $

usage() {
  cat << EOF
  usage: ${0##*/} OPTIONS [OPTIONS...]
  -a, --aufs		adds aufs[2] support to the initramfs for sqfsd (aufs2+squashfs).
      --bin-dir=bin 	create, wen building busybox or gpg, or use binaries from bin directory.
  -A, --build-all	build gnupg, busybox with unicode keymap with AUFS2/LVM2/TOI support.
  -b, --build-bb 	build a static busybox, copy binary/applets to \$BIN, then build initramfs.
  -g, --build-gpg 	build a static gnupg-1.4.x and copy the binary/options.skel to \$BIN, 
  			-g|--gpg is as if included to the cmdline as well, then build an initramfs.
      --conf-dir=<dir> 	use <dir> to copy gpg.conf for gpg configuration file.
      --font=<font>	adds <font>, if \`=*' is omitted will add default font if available.
      --gpg 		adds GPG support, require a static app-crypt/gnupg-1.4 and options.skel.
      --kmap=map:kmap	generate kmap keymap using map as input keymap.
  -l, --lvm 		adds LVM2 support, require a static sys-fs/lvm2 build.
      --misc-dir=misc 	use 'misc/{.gnupg/gpg.conf,share/gnupg/options.skel,initramfs-ll.conf}',  
      			one can add manpages and info files of gpg/lvm in misc/share as the whole
			directory will be copied over into the initramfs.
      --splash=theme	splash theme to include in the initramfs.
      --toi		adds tuxonice support.
  -h, --help		print this help.
  -v, --version 	print version.

  usages: runned without arguments, build an initramfs using default values defined in mkifs-ll.conf

  # build an initramfs, after building gnupg and busybox, with AUFS2/LVM2/GPG support
  ${0##*/} --build-all --aufs --lvm
EOF
}

while [[ $# > 0 ]]; do
	case $1 in
		--aufs|-a) export iAUFS=y; shift;;
		--bin-dir=*) [[ -n ${1#*=} ]] && export BIN="${1#*=}"; shift;;
		--build-all|-A) export iLVM=y; export iGPG=y; export BBB=y; export CONFIG=y; 
				export bGPG=y; export KBB=y; export UNICODE=y; shift;;
		--build-bb|-b) BBB=y; export CONFIG=y; export IBB=y; shift;;
		--build-gpg|-g) bGPG=y; export iGPG=y; shift;;
		--conf-dir*) export CONF="${1#*=}"; shift;;
		--font=*) [[ -n ${1#*=} ]] && export FONTS+=",${1#*=}"; shift;;
		--gpg|-g) export iGPG=y; shift;;
		--lvm|-l) export iLVM=y; shift;; 
		--kmap=*) export KEYMAP_IN=$(echo ${1#*=}|cut -d':' -f1)
			  export KEYMAP_OUT=$(echo ${1#*=}|cut -d':' -f2)
			  export KBB=y; shift;;
		--lvm|-l) export iLVM=y; shift;;
		--minimal|-m) export CONFIG=m; shift;;
		--misc-dir*) [[ -n "${1#*=}" ]] && export MISC="${1#*=}"; shift;;
		--splash=*) [[ -n ${1#*=} ]] && export SPLASHS+=",${1#*=}"; shift;;
		--toi) export iTOI=y; shift;;
		--version|-v)  echo "version $revision"; exit 0;;
		--help|-h|*) usage; exit 0;;
	esac
done

[[ -f ./mkifs-ll.conf ]] && source ./mkifs-ll.conf
:	${WORKDIR:=$(pwd)}
:	${MISC:=$WORKDIR/misc}

error() { echo -ne "\e[1;31m* \e[0m$@"; }
die()   { error "$@"; exit 1; }

[[ -n "$BBB" ]] && mkdir -p "$BIN" && ./mkifs-ll_bb

[[ -n "$bGPG" ]] && { 
	mkdir -p "$BIN"
	mkdir -p "$MISC"/{share/,.}gnupg
	[[ -n "$CONF" ]] && {
		cp "$CONF"/gpg.conf "$MISC"/.gnupg/ || die "eek!"
		unset CONF; }
	./mkifs-ll_gpg
	cp "$BIN"/options.skel "$MISC"/share/gnupg/ || die "eek!"
	unset bGPG; }

./mkifs-ll

# vim:fenc=utf-8:ci:pi:sts=0:sw=4:ts=4:
