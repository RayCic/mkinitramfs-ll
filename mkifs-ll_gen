#!/bin/zsh
# $Id: mkinitramfs-ll/mkifs-ll_gen[.zsh],v 0.2.2 2011/10/28 -tclover Exp $

usage() {
  cat <<-EOF
  usage: ${(%):-%1x} [OPTIONS] [OPTIONS...]
  -a, --aufs             adds support for squashed directory-ies (sqfsd) (aufs2+squashfs)
      --bindir=bin       copy binaries/applets/keymap to \$BINDIR after building them
  -A, --build-all        build gnupg-1.4.x, busybox, unicode keymap and AUFS/LVM/TOI support
  -b, --build-bb         build a static busybox, copy binary/applets to \$BINDIR
  -g, --build-gpg        build gnupg-1.4.x, copy binary to $BINDIR, and add GnuPG support 
      --confdir=<dir>    use <dir> to copy gpg.conf, gpg configuration file
      --font=<font>	     comma seperated list of  font(s) to include to the initramfs
      --gpg              adds GPG support, require a static gnupg-1.4 and options.skel
      --keymap=map:kmap  generate kmap keymap using map as input keymap
  -l, --lvm              adds LVM2 support, require a static sys-fs/lvm2
      --miscdir=misc     use '.gnupg/gpg.conf,share/gnupg/options.skel' from \$MISCDIR 
                         one can add manpages gpg/lvm/cryptsetup in \$MISCDIR/share
      --splash=theme     comma sepatarated list of splash(s) theme to include
      --toi	             adds tuxonice support
  -u, --usage            print this help
  -v, --version          print version

  usage: runned without arguments, build an initramfs for kernel \$(uname -r)

  # build an initramfs, after building gnupg and busybox, with AUFS2/LVM2/GPG support
  ${(%):-%1x} --build-all --aufs --lvm
EOF
}

while [[ $# > 0 ]]; do
	case $1 in
		--aufs|-a) set iAUFS=y; shift;;
		--bindir=*) [[ -n ${1#*=} ]] && BINDIR=${1#*=}; shift;;
		--build-all|-A) set iLVM=y; iGPG=y; set BBB=y; set CONFIG=y; 
				set bGPG=y; set KBB=y; UNICODE=y; shift;;
		--build-bb|-b) BBB=y; CONFIG=y; IBB=y; shift;;
		--build-gpg|-g) bGPG=y; iGPG=y; shift;;
		--confdir*) CONFDIR=${1#*=}; shift;;
		--font=*) [[ -n ${1#*=} ]] && FONTS+=:${1#*=}; shift;;
		--gpg|-g) iGPG=y; shift;;
		--lvm|-l) iLVM=y; shift;; 
		--kmap=*) KEYMAP_IN=${${(pws,:,)${1#*=}}[(w)1]}; KBB=y 
		         KEYMAP_OUT=${${(pws,:,)${1#*=}}[(w)2]}; shift;;
		--lvm|-l) iLVM=y; shift;;
		--minimal|-m) CONFIG=m; shift;;
		--miscdir*) [[ -n ${1#*=} ]] && MISCDIR=${1#*=}; shift;;
		--splash=*) [[ -n ${1#*=} ]] && SPLASHS+=:${1#*=}; shift;;
		--toi) iTOI=y; shift;;
		--version|-v)  echo "version $revision"; exit 0;;
		--usage|-u|*) usage; exit 0;;
	esac
done

error() { print -P "%B%F{red}*%b%f $@"; }
die()   { error $@; exit 1; }
alias die='die "%F{yellow}%1x:%U${(%):-%I:%N}:%u%f" $@'

[[ -f ./mkifs-ll.conf ]] && source ./mkifs-ll.conf
:	${WORKDIR:=$(pwd)}
:	${MISCDIR:=$WORKDIR/misc}

if [[ -n $BBB ]] { mkdir -p $BINDIR; ./mkifs-ll_bb }

if [[ -n $bGPG ]] { 
	mkdir -p $BINDIR
	mkdir -p $MISCDIR/{share/,.}gnupg
	if [[ -n $CONFDIR ]] {	cp $CONFDIR/gpg.conf $MISCDIR/.gnupg/ || die "eek!"; unset CONF }
	./mkifs-ll_gpg
	cp $BINDIR/options.skel $MISCDIR/share/gnupg/ || die "eek!"
	unset bGPG 
}

./mkifs-ll

# vim:fenc=utf-8:ci:pi:sts=0:sw=4:ts=4:
