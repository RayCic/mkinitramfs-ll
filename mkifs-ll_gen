#!/bin/bash
# $Id: mkinitramfs-ll/mkifs-ll_bb[.bash],v 0.2.2 2011/10/30 -tclover Exp $

usage() {
  cat <<-EOF
  usage: ${0##*/} OPTIONS [OPTIONS...]
      --aufs             add aufs(+squashfs modules +{,u}mount.aufs binaries) support (sqfsd)
      --bindir=bin       copy binaries/applets/keymap to \${BINDIR} after having built them
  -A, --build-all        build gnupg-1.4.x, busybox, unicode keymap, add AUFS/LVM/TOI support
  -b, --build-bb         build a static busybox, and then copy binary/applets to \${BINDIR}
  -g, --build-gpg        build gnupg-1.4.x, copy gpg/option.skel to $BINDIR, add GnuPG support
      --confdir=<dir>    use <dir> to copy gpg.conf, GnuPG configuration file
      --font=<font>      collon ':' seperated list of fonts in include to the initramfs image
  -g, --gpg              adds GnuPG support, require a static gnupg-1.4.x and 'options.skel'
      --keymap=map:kmap  generate a [unicode] kmap keymap from  map as input keymap name
  -l, --lvm              adds LVM2 support, require a static sys-fs/lvm2[lvm.static] binary
      --miscdir=misc     use '.gnupg/gpg.conf,share/gnupg/options.skel' from \$MISCDIR dir,
                         one can add manpages gpg/lvm/cryptsetup in \$MISCDIR/share as well
      --splash=<theme>   collon ':' separated list of splash themes to include in the image
      --toi              adds tuxonice support for splash, require tuxoniceui_text binary
  -u, --usage            print this help/usage and exit
  -v, --version          print version string and exit

  usage: runned without arguments, build an initramfs for kernel \$(uname -r)

  # build an initramfs, after building gnupg and busybox, with AUFS2/LVM2/GPG support
  ${0##*/} --build-all --aufs --lvm
EOF
}

while [[ $# > 0 ]]; do
	case $1 in
		--aufs|-a) iAUFS=y; shift;;
		--bindir=*) [[ -n ${1#*=} ]] && BINDIR="${1#*=}"; shift;;
		--build-all|-A) iLVM=y; iGPG=y; BBB=y; CONFIG=y; 
				bGPG=y; KBB=y; UNICODE=y; shift;;
		--build-bb|-b) BBB=y; CONFIG=y; IBB=y; shift;;
		--build-gpg|-g) bGPG=y; iGPG=y; shift;;
		--confdir*) CONFDIR="${1#*=}"; shift;;
		--font=*) [[ -n ${1#*=} ]] && FONTS+=":${1#*=}"; shift;;
		--gpg|-g) iGPG=y; shift;;
		--lvm|-l) iLVM=y; shift;; 
		--kmap=*) KEYMAP_IN=$(echo ${1#*=}|cut -d':' -f1) 
		         KEYMAP_OUT=$(echo ${1#*=}|cut -d':' -f2)
			  KBB=y; shift;;
		--lvm|-l) iLVM=y; shift;;
		--minimal|-m) CONFIG=m; shift;;
		--miscdir*) [[ -n "${1#*=}" ]] && MISCDIR="${1#*=}"; shift;;
		--splash=*) [[ -n ${1#*=} ]] && SPLASHS+=":${1#*=}"; shift;;
		--toi) iTOI=y; shift;;
		--usage|-u|*) usage; exit 0;;
	esac
done

[[ -f ./mkifs-ll.conf ]] && source ./mkifs-ll.conf
:	${WORKDIR:=$(pwd)}
:	${MISCDIR:=$WORKDIR/misc}

error() { echo -ne "\e[1;31m* \e[0m$@\n"; }
die()   { error "$@"; exit 1; }

[[ -n "$BBB" ]] && mkdir -p "$BIN" && ./mkifs-ll_bb

[[ -n "$bGPG" ]] && { 
	mkdir -p "$BINDIR"
	mkdir -p "$MISCDIR"/{share/,.}gnupg
	[[ -n "$CONFDIR" ]] && {
		cp "$CONFDIR"/gpg.conf "$MISCDIR"/.gnupg/ || die "eek!"
		unset CONFDIR
	}
	./mkifs-ll_gpg
	cp "$BINDIR"/options.skel "$MISCDIR"/share/gnupg/ || die "eek!"
	unset bGPG
}

./mkifs-ll

# vim:fenc=utf-8:ci:pi:sts=0:sw=4:ts=4:
