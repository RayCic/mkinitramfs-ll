#
# $Header: mkinitramfs-ll/hooks/zram                     Exp $
# $Author: (c) 2011-2014 -tclover <tokiclover@gmail.com> Exp $
# $License: 2-clause/new/simplified BSD                  Exp $
# $Version: 0.13.8 2014/10/01 12:33:03                   Exp $
#

set +e +x
source $LIBDIR/functions || return
source $LIBDIR/helpers   || return

[ -z "$izram" ] && _getopt "izram"

dozram() {
	echo $$ >/run/${0##*/}.pid

	eval set -- $(echo "${izram%%:*}" | sed -e 's/-/ /g')

	local compressor="$3" num_devices="${1:-4}" streams="${2:-2}"
	debug -d modprobe zram num_devices=$num_devices

	case "$compressor" in
		(lz4|lzo)        :;;
		(*) compressor=lz4;;
	esac
	[ -w /sys/block/zram0/comp_algorithm ] || compressor=
	[ -w /sys/block/zram0/max_comp_streams ] || streams=

	local num=0 dev device fs mopt size
	for device in $(echo "${izram#*:}" | sed -e 's/:/ /g'); do
		[ "$num" = "$num_devices" ] && break

		eval set -- $(echo "$device" | sed -e 's/-/ /g')
		size="$1" fs="$2" dev=/dev/zram$num
		[ -n "$size" ] || continue
		[ -b "$dev" ] || break

		[ -n "$compressor" ] &&
		echo $compressor > /sys/block/zram$num/comp_algorithm
		[ -n "$streams" ] &&
		echo $streams > /sys/block/zram$num/max_comp_streams
		echo $size >/sys/block/zram$num/disksize

		num=$(expr $num + 1)

		[ -n "$fs" ] || continue
		if [ -x /sbin/mkfs.$fs ]; then
			debug -d /sbin/mkfs.$fs /dev/zram$num
		else
			die "dozram: mkfs.$fs nout found"
		fi
	done

	rm -f /run/${0##*/}.pid
}

[ -n "$izram" ] && dozram

#
# vim:fenc=utf-8:ft=sh:ci:pi:sts=0:sw=4:ts=4:
#
