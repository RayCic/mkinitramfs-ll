#!/sbin/runscript
# Copyright 1999-2014 Gentoo Foundation
# Distributed under the terms of the simplified 2-clause BSD license
# $Header: mkinitramfs-ll/svc/sqfsdmount.initd,v 1.2 2014/07/07 22:06:10 -tclover Exp $

conf_file="/etc/conf.d/${SVCNAME}"
description="manage (aufs+squashfs) squashed directories"

depend() {
	need fsck localmount
	use lvm modules mtab
	after lvm modules
	before consolefont bootmisc acpid keymaps
	keyword -jail -openvz -vserver -lxc
}

start() {
	local IFS="${IFS}:"
	einfo "mounting system wide squashed dirs"
	for dir in $sqfsd_sys; do 
		smount $sqfsdir $dir
	done
	einfo "mounting local wide squashed dirs"
	for dir in $sqfsd_local $sqfsd_rebuild; do 
		smount $sqfsdir $dir
	done
	return 0
}

stop() {
	if [[ -n "$sqfsd_sdr" ]]; then
		eeinfo "sdr: rebuilding $sqfsd_sdr squashed directories"
		if which sdr 1>/dev/null 2>&1; then
			sdr -o0 -nd$sqfsd_sdr 1>/dev/null 2>&1
		else
			eerror "sdr: there is not a sdr script in PATH"
		fi
	fi

	einfo "umounting local wide squashed dirs"
	local IFS="${IFS}:"
	sync; sync
	for dir in $sqfsd_local; do 
		sumount $dir
	done

	einfo "remounting in ro mode system squashed dirs"
	if [[ "$umount_sys" == "yes" ]]; then
		for dir in $sqfsd_sys; do
			sremount $dir ro
		done
	fi
	return 0
}

restart() {
	stop
	start
	for dir in $sqfsd_sys; do
		sremount $dir rw
		eend "$?" "failed to remount $dir in rw mode"
	done
	return 0
}

# @FUNCTION:smount
# @DESCRIPTION: Squashed dir MOUNT
smount() {
	local d=$2 b=$1/$2
	if grep aufs:$d /proc/mounts 1>/dev/null 2>&1; then 
		einfo "squashed aufs:$d already mounted"
	else
		ebegin "mounting squashed $d"
		if grep $b/rr /proc/mounts 1>/dev/null 2>&1; then 
			einfo "squashed $b.sfs image already mounted"
		else
			mount -t squashfs $b.sfs $b/rr -o nodev,loop,ro 1>/dev/null 2>&1
       			eend "$?" "failed to mount $b.sfs image" || return
       	fi
		mount -t aufs aufs:$d $d -o nodev,udba=reval,br:$b/rw:$b/rr 1>/dev/null 2>&1
		eend "$?" "failed to mount aufs:$d"
	fi
}

# @FUNCTION: sumount
# @DESCRIPTION: Squashed dir UMOUNT
sumount() {
	local d=$2 b=$1/$2 no_netdev
	[[ "${RC_UNAME}" == "Linux" ]] && no_netdev="-O no_netdev"

	ebegin "umounting squashed ${dir}"
	umount -lt aufs $d $no_netdev 1>/dev/null 2>&1
	eend "$?" "failed to umount squashed aufs:$d" || return
	
	umount -lt squashfs $b/rr $no_netdev 1>/dev/null 2>&1
	eend "$?" "failed to umount $b.sfs image"
}

# @FUNCTION: sremount
# @DESCRIPTION: Squashed dir RE-MOUNT in ro mode
sremount() {
	local d=$1 o=${2:-ro}
	ebegin "ro mode remounting aufs:$d"
	mount -o remount,$o aufs:$d 1>/dev/null 2>&1
	eend "$?" "failed to remount aufs:$d in ro mode"
}

# vim:fenc=utf-8:ft=gentoo-init-d:ci:pi:sts=0:sw=4:ts=4:
