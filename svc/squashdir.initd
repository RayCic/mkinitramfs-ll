#!/sbin/runscript
#
# $Header: mkinitramfs-ll/svc/squashdir.initd            Exp $
# $Author: (c) 2011-2015 -tclover <tokiclover@gmail.com> Exp $
# $License: 2-clause/new/simplified BSD                  Exp $
# $Version: 0.18.0 2015/01/20 12:33:03                   Exp $
#

description="Manage (AUFS+SquashFS) squashed directories"
:	${squash_rootdir:=/aufs}

depend()
{
	after localmount
	if [ "${RC_RUNLEVEL}" == "boot" ]; then
		before consolefont bootmisc acpid keymaps
	fi
}

start_pre()
{
	local ret
	if ! grep -q aufs /proc/filesystems; then
		ebegin "Loading aufs kernel module"
		modprobe aufs >/dev/null 2>&1
		ret=$?
		eend "${ret}"
		[ ${ret} = 0 ] || return 1
	fi
	if ! grep -q squashfs /proc/filesystems; then
		ebegin "Loading squashfs kernel module"
		modprobe squashfs >/dev/null 2>&1
		ret=$?
		eend "${ret}"
		[ ${ret} = 0 ] || return 2
	fi
}

start()
{
	local IFS="${IFS}:"
	for dir in ${squash_sysdir} ${squash_localdir}; do 
		squash_mount "${squash_rootdir}" "${dir}"
	done
	return 0
}

stop()
{
	local IFS="${IFS}:"
	for dir in ${squash_localdir}; do
		squash_umount "${squash_rootdir}" "${dir}"
	done
	for dir in ${squashdir_sysdir}; do
		squash_remount "${dir}" "ro"
	done
	return 0
}

restart()
{
	stop
	start
	for dir in ${squashdir_sysdir}; do
		squash_remount "${dir}" "rw"
	done
	return 0
}

stop_pre()
{
	[ -n "${squash_rebuild_dir}" ] || return 0
	local IFS="${IFS}:"
:	${sdr:=$(type -p sdr)}

	if test -n "${sdr}" -a -x "${sdr}"; then
		ebegin "Rebuilding ${squash_rebuild_dir} squashed directories"
		${sdr} -o${offset:-5} -d${squash_rebuild_dir} >/dev/null 2>&1
		eend "${?}"
	else
		ewarn "No suitable sdr script found in PATH"
	fi
}

squash_mount()
{
	local base="${1}/${dir#/}" ret
	dir=/${dir#/}

	grep -q "aufs:${dir}" /proc/mounts && return
	if ! grep -q "${base}.squashfs" /proc/mounts; then 
		ebegin "Mounting ${base}.squashfs"
		mount -t squashfs -o loop,nodev,ro "${base}.squashfs" "${base}/rr"
		ret="${?}"
		eend "${ret}"
		[ ${ret} != 0 ] && return
	fi
	ebegin "Mounting aufs:${dir}"
	mount -t aufs -o "nodev,udba=reval,br:${base}/rw:${base}/rr" \
		 "aufs:${dir}" "${dir}"
	eend "${?}"
}

squash_umount()
{
	local base="${1}/${dir#/}" no_netdev
	dir=/${dir#/}
	[ "${RC_UNAME}" = "Linux" ] && no_netdev="-O no_netdev"

	auplink "${dir}" flush
	ebegin "Umounting aufs:${dir}"
	umount -lt aufs "aufs:${dir}" "${no_netdev}" > /dev/null 2>&1
	local ret=$?
	eend "${ret}"
	[ ${ret} != 0 ] && return
	
	ebegin "Unmounting ${base}.squashfs"
	umount -lt squashfs "${base}/rr" "${no_netdev}" >/dev/null 2>&1
	eend "${?}"
}

squash_remount()
{
	local opt="${2:-ro}"
	dir=/${dir#/}
	ebegin "Re-Mounting aufs:${dir} in ${opt} mode"
	mount -o "remount,${opt}" "aufs:${dir}" 1>/dev/null 2>&1
	eend "${?}"
}

#
# vim:fenc=utf-8:ft=gentoo-init-d:ci:pi:sts=0:sw=4:ts=4:
#
