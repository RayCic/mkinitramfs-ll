#!/sbin/runscript
#
# $Header: mkinitramfs-ll/svc/squashdir.initd            Exp $
# $Author: (c) 2012-2015 -tclover <tokiclover@gmail.com> Exp $
# $License: 2-clause/new/simplified BSD                  Exp $
# $Version: 0.21.0 2015/05/28 12:33:03                   Exp $
#

description="(AUFS+SquashFS) squash-directories"

:	${NULL=/dev/null}
:	${squash_rootdir:=/squash}
:	${sdr:=$(type -p sdr 2>${NULL})}

case "${squash_filesystem}" in
	(aufs|overlay) ;;
	(*) squash_filesystem=;;
esac

depend()
{
	after localmount
	if [ "${RC_RUNLEVEL}" = "boot" ]; then
		before consolefont bootmisc acpid keymaps
	fi
}

start_pre()
{
	local mod
	ebegin "Setting up kernel modules"
	for mod in ${squash_filesystem:-aufs overlay} squashfs; do
		grep -q ${mod} /proc/filesystems || modprobe ${mod} >${NULL} 2>&1 ||
			case "${mod}" in
				(overlay|squashfs) { end 1 ${mod}; return 1; };;
				(aufs) continue;;
			esac
		case "${mod}" in
			(aufs|overlay) squash_filesystem="${mod}"; break;;
		esac
	done
	eend ${?}
}

start()
{
	local dir
	for dir in ${squash_sysdir} ${squash_localdir}; do
		squash_mount "${squash_rootdir}" "${dir}"
	done
	return 0
}

stop()
{
	local dir
	for dir in ${squash_localdir}; do
		squash_umount "${squash_rootdir}" "${dir}"
	done
	for dir in ${squashdir_sysdir}; do
		squash_remount "${dir}" "ro"
	done
	return 0
}

stop_pre()
{
	[ -n "${squash_rebuild_dir}" ] || return 0
	[ -n "${sdr}" -a -x "${sdr}" ] || { ewarn "No suitable sdr found."; return; }

	ebegin "Rebuilding ${squash_rebuild_dir}"
	${sdr} -o${offset:-5} -f${squash_filesystem} ${squash_rebuild_dir} >${NULL} 2>&1
	eend ${?}
}

restart()
{
	stop
	start
	local dir
	for dir in ${squashdir_sysdir}; do
		squash_remount "${dir}" "rw"
	done
	return 0
}

squash_mount()
{
	local DIR opt
	DIR="${1}/${2#/}" dir="/${2#/}"
	grep -q ${squash_filesystem}:${dir} /proc/mounts && return
	case "${squash_filesystem}" in
		(aufs)
			mkdir -p -m 0755 ${DIR}/rr ${DIR}/rw
			opt=nodev,udba=reval,br:${DIR}/rw:${DIR}/rr;;
		(overlay)
			mkdir -p -m 0755 ${DIR}/rr ${DIR}/up ${DIR}/wk
			opt=nodev,upperdir=${DIR}/up,lowerdir=${DIR}/rr,workdir=${DIR}/wk;;
	esac

	ebegin "Mounting ${squash_filesystem}:${dir}"
	if ! grep -q ${DIR}/rr /proc/mounts; then
		mount -t squashfs -o nodev,ro ${DIR}.squashfs ${DIR}/rr \
			>${NULL} 2>&1 || { eend 1 SquashFS; return 1; }
	fi
	mount -t ${squash_filesystem} -o ${opt} \
		${squash_filesystem}:${dir} ${dir} >${NULL} 2>&1
	eend "${?}" "${squash_filesystem}"
}

squash_umount()
{
	local DIR opt
	DIR="${1}/${2#/}" dir="/${2#/}"

	case "${RC_UNAME}" in
		(Linux) opt="-O no_netdev";;
	esac
	case "${squash_filesystem}" in
		(aufs) auplink ${dir} flush >${NULL} 2>&1;;
	esac
	ebegin "Umounting ${squash_filesystem}:${dir}"
	umount -l ${opt} ${squash_filesystem}:${dir} >${NULL} 2>&1 ||
		{ eend 1 ${squash_filesystem}; return 1; }
	umount -l ${opt} ${DIR}/rr   >${NULL} 2>&1
	eend ${?} SquashFS
}

squash_remount()
{
	dir="/${1#/}"
	ebegin "Re-Mounting ${squash_filesystem}:${DIR}"
	mount -o remount,${2:-ro} ${squash_filesystem}:${dir} >${NULL} 2>&1
	eend ${?}
}

#
# vim:fenc=utf-8:ft=gentoo-init-d:ci:pi:sts=0:sw=4:ts=4:
#
