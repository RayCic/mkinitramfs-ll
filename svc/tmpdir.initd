#!/sbin/runscript
#
# $Header: mkinitramfs-ll/svc/tmpdir.initd               Exp $
# $Author: (c) 2011-2015 -tclover <tokiclover@gmail.com> Exp $
# $License: 2-clause/new/simplified BSD                  Exp $
# $Version: 0.16.0 2015/01/01 12:33:03                   Exp $
#

description="Maitain temporary directory /var/{log,...} with optional backup"
extra_commands="restore save"
description_restore="Restore directory contents using dir$extension"
description_save="Archive directory contents using dir$extension"
:	${compressor:=lz4 -1 -}
:	${extension:=.tar.${compressor%% *}}

depend()
{
	if yesno ${use_zram}; then
		use zram
		after zram
	fi
	before logger
}

start()
{
	local IFS=":${IFS}" dir _dir
	
	if ! grep -q "${tmpdir_root}" /proc/mounts; then
		if yesno ${use_zram}; then
			ewarn "No suitable zram backed root dir found"
			return 0
		else
			local ret
			mkdir -p "${tmpdir_root}"
			ebegin "Mounting ${tmpdir_root}"
			mount -o rw,nodev,relatime,mode=0755,size=${tmpdir_size:-10%} \
				-t tmpfs "${RC_SVCNAME:-tmpdir}" "${tmpdir_root}"
			ret=$?
			eend "${ret}"
			[ "${ret}" = 0 ] || return 0
		fi
	fi
	
	for dir in ${tmpdir_saved} ${tmpdir_unsaved}; do
		_dir="${tmpdir_root}${dir}"
		grep -q "${_dir}" /proc/mounts && continue
		mkdir -p "${_dir}"
		ebegin  "Mounting ${_dir}"
		mount --bind "${_dir}" "${dir}" > /dev/null 2>&1
		eend "$?"
	done
	restore
	return 0
}

stop()
{
	local IFS=":${IFS}" dir _dir

	save
	for dir in ${tmpdir_saved} ${tmpdir_unsaved}; do
		case "${dir}" in
			(/var/log|/var/run)
				continue;;
		esac
		_dir="${tmpdir_root}${dir}"
		grep -q "${_dir}" /proc/mounts || continue
		ebegin  "Unmounting ${_dir}"
		umount -l "${_dir}" > /dev/null 2>&1
		eend "$?"
	done
	return 0
}

start_pre()
{
	local IFS=":${IFS}"

	for dir in ${tmpdir_saved}; do
		[ -e "${dir}${extension}" ] && continue
		[ -d "${dir}" ] && save "${dir}" || mkdir -p "${dir}"
	done
}

restart()
{
	start
}

restore()
{
	local IFS=":${IFS}"
	local swd="$(pwd)"
	local decompress="${compressor%% *}"
	local tarball

	for dir in ${1:-${tmpdir_saved}}; do
		cd "${dir%/*}" > /dev/null 2>&1

		if [ -f "${dir}${extension}" ]; then
		:	tarball="${dir}${extension}"
		elif [ -f "${dir}.old${extension}" ]; then
		:	tarball="${dir}.old${extension}"
		else
			eend "${?}" "no tarball found for ${dir}"
			continue
		fi
		ebegin  "Restoring ${dir}"
		${decompress} -cd "${tarball}" | tar -xp
		eend "${?}"
	done

	cd "${swd}" > /dev/null 2>&1
}

save()
{
	local IFS=":${IFS}"
	local swd="$(pwd)"

	for dir in ${1:-${tmpdir_saved}}; do
		cd "${dir%/*}" > /dev/null 2>&1

		if [ -f "${dir}${extension}" ]; then
			mv -f "${dir}${extension}" "${dir}.old${extension}"
		fi
		ebegin  "Saving ${dir}"
		tar -Ocp ${dir##*/} | ${compressor} "${dir}${extension}"
		eend "${?}"
	done

	cd "${swd}" > /dev/null 2>&1
}

#
# vim:fenc=utf-8:ft=gentoo-init-d:ci:pi:sts=0:sw=4:ts=4:
#
