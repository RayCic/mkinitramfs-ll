# $Id: mkinitramfs-ll/ChangeLog, 2014/09/26 12:40:11 -tclover Exp $

* cmdline clean for bash/zsh scripts (there were many left overs...);
* now mkinitramfs-ll.bash will pick up opts[-<single-letter>] options found
in mkinitramfs-ll.conf (zsh variant always honored it);
* removed openrc and splash specific bits from sdr.$shell, new openrc has
runtime temporary files in /run, it think splash-utils is unmaintained...;
* now zsh scripts use getopt(1) to parse optional arguments, (zsh/zutil)
zparseopts is awfull for long options;
* mkinitramfs-ll.zsh: fix parsing -b|-bin,-F|-firmware,-y|-keymap, so next
occurences will rightly append options;
* fix help formating for bash scripts regarding white space issue (getopt(1)).

0.13.6:

* fix copying binaries which have busybox applets that end up by
corrupting/overriding busybox binary;
* synced to current mdev files (conf/lib);
* fix root mount option (broken with an old variable rename);
* fix busybox applets list generating with a dynamic binary;
* clean up: init/mkinitramfs-ll.zsh;
* now warning will be printed to stderr instead of stdout, so one can
easily get access to no fatal warnings with something like `2>err';
* added kernel compressor check and iterration loop to get a supported
compressed initramfs, so now one can build an uncompressed initramfs
as result when building with -c'none' switch;
* rewritten adn() to donod(), zsh has a fix with this;
* moved domod() from init lib/functions to make the function public;
* mkinitramfs-ll.$shell won't enforce a static busybox binary anymore,
only a warning will be displayed if a dynamic binary is found.

0.13.5:

* fix splash deamon initialization (broken because of helper renames, sigh);
* fix parsing zfs argument for sawap and resume along with the returned device.

0.13.4:

* fix key mode for zfs module;
* fix kernel cmdline argument parsing for zfs.

0.13.3:

* documented *imodule* kernel cmdline;
* cleaned usr/README;
* finished reverting commit dd17c24.

0.13.2:

* revert commit dd17c24 7a9d1fe b601b48 dd17c24 that introduced function name()
definition to sh scripts;
* added user_xattr to zram.initd;
* updated {,svc/}README busybox related bits;
* minor fix for init (umount proc at the end, not at the begining).

0.13.1:

* fix copying binaries and libraries: binaries and libraries are no longer
duplicated, symlinks are copied instead with the libraries;
* renamed sqfsd to squashd in init,usr/lib/mkinitramfs-ll/functions,
mkinitramfs-ll.{conf,{ba,z}sh};
* init/sdr.$shell/squashdir-mount.initd use standard .squashfs file extension;
* added initialization code for sdr.$shell and squashdir-mount;
* renamed clumsy sqfsdmount name to a more clear squashdir-mount;
* clean up sdr.$shell and squashdir-mount with more clear/understandable names
for functions/variables;
* sdr.$shell use `lzo -Xcompression-level 1' as default compressor for speed
and efficiency; hdd or ssd space is cheap nowadays;
* updated squashdir/SQUASHDIR=/aufs (default squash-ed root location);
* update help message because option should append just after option string
* added -F|[-]-firmware switch to mikinitramfs-ll

0.13.0:

* added *imdodule* kernel cmdline argument to be able to execute scripts
or mmodule whenever one want to do so, previous implementation ran the
script or module on every single boot up: now append e.g *imodule=zram*
is enough! And do not prefix scripts/module with LVL init run level which
brings the old behavious. See zram and zfs for pratical exemples.
Actualy nobody would want to append zram to *imodule* because zram module
will be executed if *izram* kernel cmdline is appended.
* added resume/swap support for zfs.
* now append *-Mzfs* is enough to include kernel modules/module/binaries.

0.12.8:

* added zram support, now one can get zram devices as early as possible.
* support kernel module group loading, meaning:
one can append a group name instead of a module name like *imod=kms*;
* user script changed previous sufix *.$level* to prefix *$level-*!
See user script section.
* renamed clumsy ishrl to irsh kernel cmdline argument.
* now one can type SH|SHELL|RSH on each read as well!
* autogen.{ba,z}sh: deleted useless files.
* removed -W|-workdir useless switch from scripts, now initramfs
will be build from TMPDIR:-/tmp.
* now bash scripts accept -? switch for help;
* rename -u|[-]-usage for standard -h|[-]-help switch.
* removed useless -v|[-]-version switch, version string is printed
with -h|[-]-help.
* now squashed dir works with full path e.g. /var/lib/layman:/var/portage or
with var/lib/layman:var/portage which was previously required before 0.12.8.

0.12.0:

* since this version: require the associated usr directory.
There's no support building at hand without the associated generating scripts!

* allow to be dropped in rescue shell on each read() (infinite loop):
just type @sh@ or @shell@ and then hit Enter.

0.8.2:

* now one can *exit* the rescue shell after beiing dropped there,
or simply after a @rescue[shell]/RSH[ELL]@ or @irsh=<n>@ on kernel
cmdline and the init will resume booting from there.
